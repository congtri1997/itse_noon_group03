<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/tx 
  http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basename" value="messages" />
	</bean>
	<!-- <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
		<property name="basename" value="messages" /> <property name="defaultEncoding" 
		value="UTF-8" /> </bean> -->
	<!-- Add support for component scanning -->
	<context:component-scan
		base-package="com.nguyencongtri.controller, com.nguyencongtri.dao, com.nguyencongtri.service" />
	<!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven />
	<!-- Define Spring MVC view resolver -->

	<!-- Add support for reading web resources: css, images, js, etc ... -->
	<mvc:resources location="/resources/"
		mapping="/resources/**"></mvc:resources>


	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<context:property-placeholder
		location="classpath:application.properties" />

	<!-- Step 1: Define Database DataSource / connection pool -->

	<bean id="myDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- these are connection pool properties for C3P0 -->
		<property name="minPoolSize" value="3" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="30000" />
	</bean>


	<!-- Step 2: Setup Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan"
			value="com.nguyencongtri.pojo" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>
	<!-- Step 3: Setup Hibernate transaction manager -->
	<bean id="myTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- Step 4: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven
		transaction-manager="myTransactionManager" />

</beans>

<!-- <?xml version="1.0" encoding="UTF-8"?> <beans:beans xmlns="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context 
	https://www.springframework.org/schema/context/spring-context.xsd"> DispatcherServlet 
	Context: defines this servlet's request-processing infrastructure Enables 
	the Spring MVC @Controller programming model <annotation-driven /> Handles 
	HTTP GET requests for /resources/** by efficiently serving up static resources 
	in the ${webappRoot}/resources directory <resources mapping="/resources/**" 
	location="/resources/" /> Resolves views selected for rendering by @Controllers 
	to .jsp resources in the /WEB-INF/views directory <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
	<beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
	name="suffix" value=".jsp" /> </beans:bean> <context:component-scan base-package="com.nguyencongtri.controller, 
	com.nguyencongtri.controller, com.nguyencongtri.dao" /> <context:property-placeholder 
	location="classpath:application.properties" /> <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
	destroy-method="close"> <property name="driverClass" value="${jdbc.driverClassName}" 
	/> <property name="jdbcUrl" value="${jdbc.url}" /> <property name="user" 
	value="${jdbc.username}" /> <property name="password" value="${jdbc.password}" 
	/> these are connection pool properties for C3P0 <property name="minPoolSize" 
	value="5" /> <property name="maxPoolSize" value="20" /> <property name="maxIdleTime" 
	value="30000" /> </bean> </beans:beans> -->